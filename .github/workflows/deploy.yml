name: CI/CD Pipeline
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: npm test # (Add tests later)

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t my-devops-app .
      - name: Log in to AWS ECR
        run: aws ecr get-login-password | docker login --username AWS --password-stdin YOUR_ACCOUNT_ID.dkr.ecr.REGION.amazonaws.com
      - name: Push to ECR
        run: |
          docker tag my-devops-app:latest YOUR_ACCOUNT_ID.dkr.ecr.REGION.amazonaws.com/my-devops-app:latest
          docker push YOUR_ACCOUNT_ID.dkr.ecr.REGION.amazonaws.com/my-devops-app:latest
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@YOUR_EC2_IP "docker pull YOUR_ACCOUNT_ID.dkr.ecr.REGION.amazonaws.com/my-devops-app:latest && docker stop my-app || true && docker rm my-app || true && docker run -d -p 3000:3000 --name my-app YOUR_ACCOUNT_ID.dkr.ecr.REGION.amazonaws.com/my-devops-app:latest"
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
            SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK_URL}}
            SLACK_MESSAGE: :Deployment succeeded"
        if: success()  